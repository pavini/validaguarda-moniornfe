@echo off
title Monitor NFe - Executar Local (Windows Corrigido)

echo üöÄ Monitor NFe - Execu√ß√£o Local Windows (Vers√£o Corrigida)
echo =========================================================
echo.

REM Verificar Python
python --version >nul 2>&1
if errorlevel 1 (
    echo ‚ùå Python n√£o encontrado no PATH!
    echo.
    echo üì• Instale Python de: https://python.org/downloads/
    echo ‚ö†Ô∏è  Marque "Add Python to PATH" na instala√ß√£o
    pause
    exit /b 1
)

for /f "tokens=2" %%i in ('python --version 2^>^&1') do set PYTHON_VERSION=%%i
echo ‚úÖ Python %PYTHON_VERSION% encontrado

REM Verificar se est√° na pasta correta
if not exist "monitor_nfe" (
    echo ‚ùå Pasta monitor_nfe n√£o encontrada!
    echo.
    echo üìÅ Execute este arquivo na pasta raiz do projeto
    echo    (onde est√° a pasta monitor_nfe)
    pause
    exit /b 1
)

REM Verificar arquivo principal
if not exist "monitor_nfe\main_refactored.py" (
    echo ‚ùå Arquivo main_refactored.py n√£o encontrado!
    echo.
    echo üìÑ Verifique se o arquivo existe em monitor_nfe\main_refactored.py
    pause
    exit /b 1
)

echo ‚úÖ Estrutura do projeto OK

REM Ir para pasta da aplica√ß√£o
cd monitor_nfe

echo.
echo üì¶ Verificando e instalando depend√™ncias Windows...

REM Instalar depend√™ncias com vers√µes espec√≠ficas para Windows
echo ‚öôÔ∏è  Instalando PySide6...
python -m pip install PySide6>=6.5.0 --no-warn-script-location >nul 2>&1

echo ‚öôÔ∏è  Instalando watchdog...
python -m pip install watchdog>=3.0.0 --no-warn-script-location >nul 2>&1

echo ‚öôÔ∏è  Instalando lxml...
python -m pip install --only-binary=all lxml>=4.9.0 --no-warn-script-location >nul 2>&1 || (
    echo ‚ö†Ô∏è  Fallback: tentando instalar lxml sem restri√ß√µes...
    python -m pip install lxml --no-warn-script-location >nul 2>&1
)

echo ‚öôÔ∏è  Instalando requests...
python -m pip install requests>=2.25.0 --no-warn-script-location >nul 2>&1

echo ‚öôÔ∏è  Instalando rarfile...
python -m pip install rarfile>=4.0 --no-warn-script-location >nul 2>&1

echo ‚úÖ Depend√™ncias instaladas

echo.
echo üîß Definindo vari√°veis de ambiente Windows...

REM Definir vari√°veis para melhor compatibilidade Windows
set QT_QPA_PLATFORM_PLUGIN_PATH=
set QT_PLUGIN_PATH=
set PYTHONIOENCODING=utf-8
set PYTHONUNBUFFERED=1

echo ‚úÖ Ambiente configurado

echo.
echo üéØ Iniciando Monitor NFe (vers√£o Windows otimizada)...
echo.
echo üí° INSTRU√á√ïES:
echo    - A interface gr√°fica abrir√° em alguns segundos
echo    - Se aparecer aviso de firewall, permita acesso
echo    - Para parar, feche a janela da aplica√ß√£o (X vermelho)
echo    - OU pressione Ctrl+C neste terminal
echo.
echo üö® Se der erro de 'handle' ou 'ThreadHandle':
echo    - Feche a aplica√ß√£o
echo    - Execute este script novamente
echo    - Problema √© tempor√°rio do Windows
echo.
echo ‚è≥ Aguarde...
echo.

REM Executar com configura√ß√µes espec√≠ficas para Windows
python -u main_refactored.py

REM Capturar c√≥digo de sa√≠da
set EXIT_CODE=%ERRORLEVEL%

REM Voltar para pasta raiz
cd ..

echo.
if %EXIT_CODE% EQU 0 (
    echo ‚úÖ Monitor NFe finalizado normalmente
) else (
    echo ‚ö†Ô∏è  Monitor NFe finalizado com c√≥digo: %EXIT_CODE%
    echo.
    echo üîç Poss√≠veis causas:
    echo    - Erro de threading (problema tempor√°rio)
    echo    - Arquivo em uso por outro programa
    echo    - Permiss√µes insuficientes
    echo    - Antiv√≠rus interferindo
    echo.
    echo üí° Solu√ß√µes:
    echo    1. Execute novamente (problemas tempor√°rios)
    echo    2. Execute como Administrador
    echo    3. Feche outros programas que usam XMLs
    echo    4. Adicione exce√ß√£o no antiv√≠rus
)

echo.
pause